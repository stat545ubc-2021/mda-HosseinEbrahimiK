scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_reorder(age_cat, diameter, mean)) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_x_discrete(drop = FALSE) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_reorder(age_cat, diameter, mean)) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_x_discrete(drop = FALSE) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_reorder(age_cat, diameter, median)) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_x_discrete(drop = FALSE) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_reorder(age_cat, diameter, mean)) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_x_discrete(drop = FALSE) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_reorder(age_cat, diameter, mean)) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_x_discrete(drop = FALSE) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_relevel(age_cat,
"Youth", "Mature", "Middle Age",
"Senior", "Ancient")) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_x_discrete(drop = FALSE) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
top_genus <- vancouver_trees %>%
group_by(genus_name) %>%
tally() %>%
arrange(desc(n)) %>%
top_n(3)
age_diamtr <- vancouver_trees %>%
# calculating age of trees with Sys.Date() and date_planted variable
mutate(age = as.numeric(substring(Sys.Date(), 1, 4))-
as.numeric(substring(date_planted, 1, 4))) %>%
# creating categorical variable based on age!
mutate(age_cat = case_when(age <= 10 ~ "Youth",
age <= 20 ~ "Mature",
age <= 30 ~ "Middle Age",
TRUE ~ "Senior")) %>%
# filtering top 3 families of trees
filter(genus_name %in% top_genus$genus_name) %>%
# from the previous milestone, we have very few data points with diameter > 75
filter(0 < diameter & diameter < 75) %>%
# removing NA values
filter(!is.na(diameter) & !is.na(age))
age_diamtr_plt <- ggplot(age_diamtr, aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_relevel(age_cat,
"Youth", "Mature", "Middle Age",
"Senior")) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
diameter_age_model <- lm(diameter, age, age_diamtr)
diameter_age_model <- lm(diameter ~ age, age_diamtr)
print(diameter_age_model)
diameter_age_model <- age_diamtr %>%
group_by(genus_name) %>%
lm(diameter ~ age, age_diamtr)
diameter_age_model <- age_diamtr %>%
group_by(genus_name) %>%
lm(diameter ~ age, .)
print(diameter_age_model)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_model)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_model$model
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_model$model
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(lm(diameter ~ age, data = .))
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
lm(diameter ~ age, data = .)
diameter_age_model$model
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
lm(diameter ~ age, data = .)
diameter_age_model
by_genus <- group_by(age_diamtr, genus_name)
diameter_age_models <- do(by_genus, lm(diameter ~ age, data=.))
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_model
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_model$model
diameter_age_modeling = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_modeling$model
suppressMessages(library(datateachr)) # <- might contain the data you picked!
suppressMessages(library(tidyverse))
top_genus <- vancouver_trees %>%
group_by(genus_name) %>%
tally() %>%
arrange(desc(n)) %>%
top_n(3)
age_diamtr <- vancouver_trees %>%
# calculating age of trees with Sys.Date() and date_planted variable
mutate(age = as.numeric(substring(Sys.Date(), 1, 4))-
as.numeric(substring(date_planted, 1, 4))) %>%
# creating categorical variable based on age!
mutate(age_cat = case_when(age <= 10 ~ "Youth",
age <= 20 ~ "Mature",
age <= 30 ~ "Middle Age",
TRUE ~ "Senior")) %>%
# filtering top 3 families of trees
filter(genus_name %in% top_genus$genus_name) %>%
# from the previous milestone, we have very few data points with diameter > 75
filter(0 < diameter & diameter < 75) %>%
# removing NA values
filter(!is.na(diameter) & !is.na(age))
age_diamtr_plt <- ggplot(age_diamtr, aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_relevel(age_cat,
"Youth", "Mature", "Middle Age",
"Senior")) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
diameter_age_modeling = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_modeling$model
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_modeling$model
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .), genus_type = genus_name)
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .)) %>%
do(genus_name = genus_name)
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .)) %>%
do(genus_type = genus_name)
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .)) %>%
do(genus_type = genus_name, .)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .)) %>%
do(genus_type = genus_name)
diameter_age_modelss <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .)) %>%
diameter_age_modelss$model
diameter_age_modelss <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_modelss$model
diameter_age_modelss <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_modelss$model[1]
diameter_age_modelss <- age_diamtr %>%
group_by(genus_name) %>%
do(c(model = lm(diameter ~ age, data = .), genus_name))
suppressMessages(library(datateachr)) # <- might contain the data you picked!
suppressMessages(library(tidyverse))
top_genus <- vancouver_trees %>%
group_by(genus_name) %>%
tally() %>%
arrange(desc(n)) %>%
top_n(3)
age_diamtr <- vancouver_trees %>%
# calculating age of trees with Sys.Date() and date_planted variable
mutate(age = as.numeric(substring(Sys.Date(), 1, 4))-
as.numeric(substring(date_planted, 1, 4))) %>%
# creating categorical variable based on age!
mutate(age_cat = case_when(age <= 10 ~ "Youth",
age <= 20 ~ "Mature",
age <= 30 ~ "Middle Age",
TRUE ~ "Senior")) %>%
# filtering top 3 families of trees
filter(genus_name %in% top_genus$genus_name) %>%
# from the previous milestone, we have very few data points with diameter > 75
filter(0 < diameter & diameter < 75) %>%
# removing NA values
filter(!is.na(diameter) & !is.na(age))
age_diamtr_plt <- ggplot(age_diamtr, aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_relevel(age_cat,
"Youth", "Mature", "Middle Age",
"Senior")) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_models$model[1]
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_models$model[1]
diameter_age_models = age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_models$model[1]
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_models$model
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
diameter_age_models
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models$model)
diameter_age_models
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models)
print(diameter_age_models$model)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models$model)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models$model)
print(diameter_age_models)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models$model)
diameter_age_models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(diameter_age_models$model)
print(diameter_age_models$genus_name)
reg_coefs <- broom::tidy(diameter_age_models$model)
reg_coefs <- broom::tidy(diameter_age_models$model[1])
reg_coefs <- broom::tidy(diameter_age_models$model[2])
reg_coefs <- summary(diameter_age_models$model[2])
reg_coefs <- summary(diameter_age_models$model[2])
reg_coefs
reg_coefs <- summary(diameter_age_models$model[2])$coefficients
reg_coefs <- diameter_age_models$model[2]$coefficients
reg_coefs
reg_coefs <- diameter_age_models$model[1]$coefficients
reg_coefs
reg_coefs <- diameter_age_models$model[1]
reg_coefs
reg_coefs <- diameter_age_models$model[2]
reg_coefs
reg_coefs <- diameter_age_models$model[3]
reg_coefs
reg_coefs <- diameter_age_models$model[2]
reg_coefs
reg_coefs <- coef(diameter_age_models$model[2])
reg_coefs
reg_coefs <- coefficients(diameter_age_models$model[2])
reg_coefs
reg_coefs <- coefficients(diameter_age_models$model[2])
reg_coefs
print(coefficients(diameter_age_models$model[2]))
print(diameter_age_models$model[2])
print(summary(diameter_age_models$model[2]))
print(summary(diameter_age_models$model[2])$coefficients[,1])
print(summary(diameter_age_models$model[2])$coefficients)
diameter_age_model <- lm(diameter ~ age, data = age_diamtr)
print(diameter_age_model)
broom::tidy(diameter_age_model)
num_tr_nghbr <- vancouver_trees %>%
# creating a variable year when trees are planted
mutate(year_planted = as.character(substring(date_planted, 1, 4))) %>%
# grouping trees by their neighborhood & year
group_by(neighbourhood_name, year_planted) %>%
# trees has planted in the pas 10 years
filter(as.numeric(substring(Sys.Date(), 1, 4)) -
as.numeric(year_planted) <= 5) %>%
# counting number of trees per year in each neighborhood
tally()
head(num_tr_nghbr)
num_tr_nghbr <- vancouver_trees %>%
# creating a variable year when trees are planted
mutate(year_planted = as.character(substring(date_planted, 1, 4))) %>%
# grouping trees by their neighborhood & year
group_by(neighbourhood_name, year_planted) %>%
# trees has planted in the pas 10 years
filter(as.numeric(substring(Sys.Date(), 1, 4)) -
as.numeric(year_planted) <= 5) %>%
# counting number of trees per year in each neighborhood
tally()
head(num_tr_nghbr)
num_tr_nghbr <- vancouver_trees %>%
# creating a variable year when trees are planted
mutate(year_planted = as.character(substring(date_planted, 1, 4))) %>%
# grouping trees by their neighborhood & year
group_by(neighbourhood_name, year_planted) %>%
# trees has planted in the pas 10 years
filter(as.numeric(substring(Sys.Date(), 1, 4)) -
as.numeric(year_planted) <= 5) %>%
# counting number of trees per year in each neighborhood
tally()
head(num_tr_nghbr)
write_csv(num_tr_nghbr, here::here("Output", "num_tree_nghbr.csv"))
saveRDS(diameter_age_model, here::here("Output", "diameter_age_model"))
saveRDS(diameter_age_model, here::here("Output", "diameter_age_model.rds"))
saveRDS(diameter_age_model, here::here("Output", "diameter_age_model.rds"))
loaded_model <- readRDS(here::here("Output", "diameter_age_model.rds"))
print(loaded_model)
models <- age_diamtr %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(models$genus_name)
print(models$model)
suppressMessages(library(datateachr)) # <- might contain the data you picked!
suppressMessages(library(tidyverse))
van_tree_wAge <- vancouver_trees %>%
# calculating age of trees with lubridate library
mutate(age = lubridate::year(Sys.Date()) - lubridate::year(date_planted)) %>%
select(tree_id, date_planted, age, everything())
van_tree_wAge <- vancouver_trees %>%
# calculating age of trees with lubridate library
mutate(age = lubridate::year(Sys.Date()) - lubridate::year(date_planted)) %>%
select(tree_id, date_planted, age, everything())
head(van_tree_wAge)
lubridate::year("1999-01-13")
class(lubridate::year("1999-01-13"))
van_tree_wAge <- vancouver_trees %>%
# calculating age of trees with lubridate library
mutate(age = lubridate::year(Sys.Date()) - lubridate::year(date_planted)) %>%
select(tree_id, date_planted, age, everything())
head(van_tree_wAge)
diameter_age_model <- lm(diameter ~ age, data = van_tree_wAge)
print(diameter_age_model)
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_relevel(age_cat,
"Youth", "Mature", "Middle Age",
"Senior")) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
top_genus <- vancouver_trees %>%
group_by(genus_name) %>%
tally() %>%
arrange(desc(n)) %>%
top_n(3)
age_diamtr <- vancouver_trees %>%
# calculating age of trees with Sys.Date() and date_planted variable
mutate(age = as.numeric(substring(Sys.Date(), 1, 4))-
as.numeric(substring(date_planted, 1, 4))) %>%
# creating categorical variable based on age!
mutate(age_cat = case_when(age <= 10 ~ "Youth",
age <= 20 ~ "Mature",
age <= 30 ~ "Middle Age",
TRUE ~ "Senior")) %>%
# filtering top 3 families of trees
filter(genus_name %in% top_genus$genus_name) %>%
# from the previous milestone, we have very few data points with diameter > 75
filter(0 < diameter & diameter < 75) %>%
# removing NA values
filter(!is.na(diameter) & !is.na(age))
age_diamtr_plt <- ggplot(age_diamtr, aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
age_diamtr_plt <- age_diamtr %>%
mutate(age_cat = fct_relevel(age_cat,
"Youth", "Mature", "Middle Age",
"Senior")) %>%
ggplot(aes(age_cat,  diameter)) +
geom_boxplot(aes(fill=age_cat)) +
theme(axis.text.x = element_text(color = "black", size=11, angle=30, vjust=.8, hjust=0.8)) +
scale_y_log10() +
xlab("Age Categories") +
ylab("Diameter (log)") +
facet_wrap(~ genus_name)
age_diamtr_plt
models <- age_diamtr %>%
filter(genus_name %in% top_genus$genus_name) %>%
group_by(genus_name) %>%
do(model = lm(diameter ~ age, data = .))
print(models$genus_name)
print(models$model)
broom::tidy(diameter_age_model)
num_tr_nghbr <- vancouver_trees %>%
# creating a variable year when trees are planted
mutate(year_planted = as.character(substring(date_planted, 1, 4))) %>%
# grouping trees by their neighborhood & year
group_by(neighbourhood_name, year_planted) %>%
# trees has planted in the pas 10 years
filter(as.numeric(substring(Sys.Date(), 1, 4)) -
as.numeric(year_planted) <= 5) %>%
# counting number of trees per year in each neighborhood
tally()
head(num_tr_nghbr)
write_csv(num_tr_nghbr, here::here("Output", "num_tree_nghbr.csv"))
saveRDS(diameter_age_model, here::here("Output", "diameter_age_model.rds"))
loaded_model <- readRDS(here::here("Output", "diameter_age_model.rds"))
print(loaded_model)
write_csv(num_tr_nghbr, here::here("Output", "num_tree_nghbr.csv"))
saveRDS(diameter_age_model, here::here("Output", "diameter_age_model.rds"))
loaded_model <- readRDS(here::here("Output", "diameter_age_model.rds"))
print(loaded_model)
